set nocompatible

if !has('nvim')
    " Set default 'runtimepath' without ~/.vim folders
    let &runtimepath=printf('%s/vimfiles,%s,%s/vimfiles/after', $VIM, $VIMRUNTIME, $VIM)
    " What is the name of the directory containing this file?
    let s:portable=expand('<sfile>:p:h')
    " Add the directory to 'runtimepath'
    let &runtimepath=printf('%s,%s,%s/after', s:portable, &runtimepath, s:portable)
endif

" Enable pathogen and plugins
runtime bundle/pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()

" Use sensible XDG paths
if has('nvim')
    set viminfo='1000,n$XDG_CACHE_HOME/nvim/info
else
    set viminfo='1000,n$XDG_CACHE_HOME/vim/info
endif

" Enable modern colors if supported
set background=dark
if has('termguicolors') && $TERM_PROGRAM != "Apple_Terminal" && empty($TMUX)
    set termguicolors
    colorscheme solarized8_dark_flat
else
    let g:solarized_termtrans=1
    let g:solarized_termcolors=256
    let g:solarized_underline=0
    set t_Co=256
    colorscheme solarized
endif

" Enable cursor shape change on insert in neovim
let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1

set shiftround " round indent to multiple shiftwidth
set showmatch " show matching brackets when text indicator is over them
set hlsearch " highlight search results
set ignorecase " ignore case when searching
set smartcase " when searching try to be smart about cases
set nowrap " don't wrap lines
set ttyfast " indicate fast tty connetion
set lazyredraw " helps dealing with flickering
set clipboard=unnamed,unnamedplus " merge clipboard with x11 and mac
set list listchars=tab:>-,trail:Â·,extends:>,precedes:< " indicate various special chars
set number " show line numbers
set cursorline " highlight line with cursor
set showcmd " show partial commands in bottom left corner
set completeopt-=preview " don't show preview window on competion
set timeoutlen=100 " helps to show leader-guide earlier

" Scrolling
set scrolloff=8 "start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" Folding
set foldmethod=indent
set foldnestmax=10
set nofoldenable
set foldlevel=2

" Use Space to toggle folding
nnoremap <Space> za
vnoremap <Space> zf

" CtrlP mappings
nnoremap <C-o> :CtrlPCmdPalette<CR>
inoremap <C-o> <ESC>:CtrlPCmdPalette<CR>

" Fn hotkeys
set pastetoggle=<F2>
nnoremap <F2> :set invpaste paste?<CR>
nnoremap <F3> :NumbersToggle<CR>
inoremap <F3> <ESC>:NumbersToggle<CR>
nnoremap <F4> :Dash<CR>
inoremap <F4> <ESC>:Dash<CR>
nnoremap <F5> :Ag<CR>
inoremap <F5> <ESC>:Ag<CR>
nnoremap <F6> :NERDTreeTabsToggle<CR>
inoremap <F6> <ESC>:NERDTreeTabsToggle<CR>
nnoremap <F7> :TagbarToggle<CR>
inoremap <F7> <ESC>:TagbarToggle<CR>

" Alt left/right to switch buffers. Terminal should be configured to send proper escape sequences
if has('nvim')
    nnoremap <A-b> :bprev!<CR>
    inoremap <A-b> <ESC>:bprev!<CR>
    nnoremap <A-f> :bnext!<CR>
    inoremap <A-f> <ESC>:bnext!<CR>
else
    nnoremap <ESC>b :bprev!<CR>
    inoremap <ESC>b <ESC>:bprev!<CR>
    nnoremap <ESC>f :bnext!<CR>
    inoremap <ESC>f <ESC>:bnext!<CR>
endif

" Allow saving of files as sudo when I forgot to start vim using sudo
cmap w!! %!sudo tee > /dev/null %

" Load plugins configurations
for f in split(glob($DOTFILES . '/vim/bundle.rc.d/*.vim'), '\n')
  execute 'source' f
endfor

" Source local configuration
runtime vimrc.local
