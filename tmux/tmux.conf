# Screen term messes with ctrl key in vim
set -g default-terminal "xterm-256color"

# Act like GNU screen
set -g prefix C-a

# Use xterm keyboard modifiers
# The only way (assisted with Learn Keys) to make mc recognize Shift+F6
setw -g xterm-keys on

# Start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Navigate between panes with Ctrl-arrows (witn vim support)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-Left if-shell "$is_vim" "send-keys C-Left"  "select-pane -L"
bind-key -n C-Down if-shell "$is_vim" "send-keys C-Down"  "select-pane -D"
bind-key -n C-Up if-shell "$is_vim" "send-keys C-Up"  "select-pane -U"
bind-key -n C-Right if-shell "$is_vim" "send-keys C-Right"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Prefix + Ctrl-arrow to switch windows
bind-key C-Left previous-window
bind-key C-Right next-window

# Fancy status bar
run-shell "$DOTFILES/tmux/plugins/colors-solarized/tmuxcolors.tmux"
set -g status-left "#H "
set -g status-left-length 20
set -g status-right "#{prefix_highlight} [%Z] %d.%m.%Y#(uptime)"
set -g status-right-length 100

# Sensible defaults and key bindings
run-shell "$DOTFILES/tmux/plugins/sensible/sensible.tmux"
run-shell "$DOTFILES/tmux/plugins/pain-control/pain_control.tmux"

# Advanced selection/yank/paster
run-shell "$DOTFILES/tmux/plugins/copycat/copycat.tmux"
run-shell "$DOTFILES/tmux/plugins/yank/yank.tmux"
run-shell "$DOTFILES/tmux/plugins/open/open.tmux"

# Indicate active prefix/copy mode
run-shell "$DOTFILES/tmux/plugins/prefix-highlight/prefix_highlight.tmux"
set -g @prefix_highlight_show_copy_mode 'on'
